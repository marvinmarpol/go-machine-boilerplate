// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"database/sql"
	"github.com/go-chi/chi/v5"
	"github.com/google/wire"
	"go-machine-boilerplate/internal/user/adapter"
	"go-machine-boilerplate/internal/user/service"
	"go-machine-boilerplate/internal/user/transport/web"
)

import (
	_ "github.com/lib/pq"
)

// Injectors from wire.go:

func InitializeUserRoute(r *chi.Mux, db *sql.DB) (web.Route, error) {
	userAdapterPostgres := adapter.NewUserAdapterPostgres(db)
	userService := service.NewUserService(userAdapterPostgres)
	handler := web.NewHandler(r, userService)
	return handler, nil
}

// wire.go:

var ProviderSet = wire.NewSet(adapter.NewUserAdapterPostgres, wire.Bind(new(service.UserRepository), new(*adapter.UserAdapterPostgres)), service.NewUserService)
